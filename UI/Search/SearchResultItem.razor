@using PortaJel_Blazor.Data;
@using PortaJel_Blazor;
@using Microsoft.Maui.Controls;
@using PortaJel_Blazor.Pages;
@using PortaJel_Blazor.Pages.Views;
@using PortaJel_Blazor.Classes;

@if (isGrid)
{
    <div class="grid-album-container">
        @if(album.isArtist == true)
        { // this item is an artist
            <div class="grid-album-cover" @onclick=NavigateToArtist @oncontextmenu=OpenContextMenu>
                <img class="grid-artist-img" src="@album.imageAtResolution(resolution)" loading="lazy" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@album.name</div>
                <div class="album-artist">@album.GetArtistName()</div>
            </div>
        }
        else
        {
            <div class="grid-album-cover" @onclick=NavigateToAlbum @oncontextmenu=OpenContextMenu>
                <img class="grid-album-img" src="@album.imageAtResolution(resolution)" loading="lazy" />
            </div>
            <div @onclick=NavigateToAlbum>
                <div class="album-name">@album.name</div>
                <div class="album-artist">@album.GetArtistName()</div>
            </div>
        }
    </div>
}
else
{
    @if (album.isArtist == true)
    {
        <div class="album-container" @oncontextmenu=OpenContextMenu>
            <div class="artist-cover" @onclick=NavigateToArtist>
                <img class="artist-cover" src="@album.imageAtResolution(resolution)" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@album.name</div>
                <div class="album-artist">@album.GetArtistName()</div>
            </div>
            <div class="favorite-button" @onclick=FavouriteItem>Favorite</div>
        </div>
    }
    else
    {
        <div class="album-container" @oncontextmenu=OpenContextMenu>
            <div class="album-cover" @onclick=NavigateToAlbum>
                <img class="album-cover" src="@album.imageAtResolution(resolution)" />
            </div>
            <div @onclick=NavigateToAlbum>
                <div class="album-name">@album.name</div>
                <div class="album-artist">@album.GetArtistName()</div>
            </div>
            <div class="favorite-button" @onclick=FavouriteItem>Favorite</div>
        </div>
    }
}

@code {
    [Parameter] public Album album { get; set; } = new Album();
    [Parameter] public bool isGrid { get; set; } = false;

    private int resolution = 300;

    private void NavigateToAlbum()
    {
        if (album != null)
        {
            if(album.id == Guid.Empty) { return; }
            MauiProgram.mainLayout.NavigateAlbum(album.id);
        }
    }
    private void NavigateToArtist()
    {
        if (album != null)
        {
            if (album.id == Guid.Empty) { return; }
            MauiProgram.mainLayout.NavigateArtist(album.id);
        }
    }
    private void FavouriteItem()
    {

    }
    private async void OpenContextMenu()
    {
        MauiProgram.ContextMenuTaskList.Clear();
        MauiProgram.ShowContextMenuImage = true;
        MauiProgram.ContextMenuMainText = album.name;
        MauiProgram.ContextMenuSubText = album.GetArtistName();
        MauiProgram.ContextMenuImage = album.imageAtResolution(resolution);

        MauiProgram.ContextMenuTaskList.Add(new ContextMenuItem("Favourite", "Favourite.png", new Task(() =>
        {

        })));
        MauiProgram.ContextMenuTaskList.Add(new ContextMenuItem("Add To Playlist", "Favourite.png", new Task(() =>
        {

        })));
        MauiProgram.ContextMenuTaskList.Add(new ContextMenuItem("View Artist", "Favourite.png", new Task(() =>
        {
            NavigateToArtist();
        })));

        await MauiProgram.mainLayout.OpenContextMenu();
    }
}
