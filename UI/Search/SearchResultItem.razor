@using PortaJel_Blazor.Data;
@using PortaJel_Blazor;
@using PortaJel_Blazor.Pages;
@using PortaJel_Blazor.Pages.Views;
@using PortaJel_Blazor.Classes;
@using SixLabors.ImageSharp;
@using Blurhash.ImageSharp;
@using BlazorAnimate;

@if (isGrid && musicObject != null)
{
    <div class="grid-album-container" @oncontextmenu=OpenContextMenu>
        @if (musicObject is Artist)
        {
            Artist artist = (Artist)musicObject;
            <div class="grid-album-cover" @onclick=NavigateToArtist>
                <img class="grid-artist-img" src="@artist.imageAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@artist.name</div>
            </div>
        }
        else if (musicObject is Album)
        {
            Album album = (Album)musicObject;
            <div class="grid-album-cover" @onclick=NavigateToArtist>
                <img class="grid-artist-img" src="@album.imageAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@album.name</div>
                <div class="album-artist">@album.artistCongregate</div>
            </div>
        }
        else if (musicObject is Playlist)
        {
            Playlist playlist = (Playlist)musicObject;
            <div class="grid-album-cover" @onclick=NavigateToArtist>
                <img class="grid-artist-img" src="@playlist.image.SourceAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@playlist.name</div>
            </div>
        }
        else if (musicObject is Song)
        {
            Song song = (Song)musicObject;
            <div class="grid-album-cover" @onclick=NavigateToArtist>
                <img class="grid-artist-img" src="@song.image.SourceAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@song.name</div>
                <div class="album-artist">@song.artistCongregate</div>
            </div>
        }
    </div>
}
else if (musicObject != null)
{
    <div class="album-container" @oncontextmenu=OpenContextMenu>
        @if (musicObject is Artist)
        {
            Artist artist = (Artist)musicObject;
            <div class="artist-cover" @onclick=NavigateToArtist>
                <img class="artist-cover" src="@artist.imageAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToArtist>
                <div class="album-name">@artist.name</div>
            </div>
        }
        else if(musicObject is Album)
        {
            Album album = (Album)musicObject;
            <div class="album-cover" @onclick=NavigateToAlbum>
                <img class="album-cover" src="@album.imageAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToAlbum>
                <div class="album-name">@album.name</div>
                <div class="album-artist">@album.artistCongregate</div>
            </div>
        }
        else if(musicObject is Playlist)
        {
            Playlist playlist = (Playlist)musicObject;
            <div class="album-cover" @onclick=NavigateToPlaylist>
                <img class="album-cover" src="@playlist.image.SourceAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToPlaylist>
                <div class="album-name">@playlist.name</div>
            </div>
        }
        else if(musicObject is Song)
        {
            Song song = (Song)musicObject;
            <div class="album-cover" @onclick=NavigateToAlbum>
                <img class="album-cover" src="@song.image.SourceAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToAlbum>
                <div class="album-name">@song.name</div>
                <div class="album-artist">@song.artistCongregate</div>
            </div>
        }
        else if(musicObject is Genre)
        {
            Genre genre = (Genre)musicObject;
            <div class="album-cover" @onclick=NavigateToAlbum>
                <img class="album-cover" src="@genre.image.SourceAtResolution(resolution)" onerror="this.src='/images/emptyAlbum.png'" />
            </div>
            <div @onclick=NavigateToAlbum>
                <div class="album-name">@genre.name</div>
            </div>
        }

        @if(musicObject is not Genre)
        {
            <div class="favorite-button" @onclick=FavouriteItem>
                @if (musicObject.isFavourite)
                {
                    <Animate Animation="Animations.ZoomIn" Duration="TimeSpan.FromSeconds(0.5)">
                        <svg class="favorite-button-icon" viewBox="0 -960 960 960" xmlns="http://www.w3.org/2000/svg">
                            <path d="M 480 -120 L 422 -172 C 354.667 -232.667 299 -285 255 -329 C 211 -373 176 -412.5 150 -447.5 C 124 -482.5 105.833 -514.667 95.5 -544 C 85.167 -573.333 80 -603.333 80 -634 C 80 -696.667 101 -749 143 -791 C 185 -833 237.333 -854 300 -854 C 334.667 -854 367.667 -846.667 399 -832 C 430.333 -817.333 457.333 -796.667 480 -770 C 502.667 -796.667 529.667 -817.333 561 -832 C 592.333 -846.667 625.333 -854 660 -854 C 722.667 -854 775 -833 817 -791 C 859 -749 880 -696.667 880 -634 C 880 -603.333 874.833 -573.333 864.5 -544 C 854.167 -514.667 836 -482.5 810 -447.5 C 784 -412.5 749 -373 705 -329 C 661 -285 605.333 -232.667 538 -172 L 480 -120 Z M 480 -501 Z" fill="currentColor" transform="matrix(1, 0, 0, 1, 7.105427357601002e-15, 1.1368683772161603e-13)" />
                        </svg>
                    </Animate>
                }
                else
                {
                    <Animate Animation="Animations.ZoomIn" Duration="TimeSpan.FromSeconds(0.5)">
                        <img class="favorite-button-icon" src="/images/heart.svg" />
                    </Animate>
                }
            </div>
        }
    </div>
}

@code {
    [Parameter] public BaseMusicItem? musicObject { get; set; } = null;
    [Parameter] public bool isGrid { get; set; } = false;

    private int resolution = 300;
    private void SetBlueHash()
    {
        if (musicObject!=null)
        {
            // TODO: Fix the fucking blur hash
            // Image image = Blurhasher.Decode(musicObject.image.blurHash, 32, 32);
            
            // SixLabors.ImageSharp.Formats.IImageFormat format = Image.DetectFormatAsync(image);
            // image.ToBase64String(format);
        }
    }

    private void NavigateToAlbum()
    {
        if (musicObject != null)
        {
            if (musicObject.id == Guid.Empty) { return; }
            MauiProgram.mainLayout.NavigateAlbum(musicObject.id);
        }
    }
    private void NavigateToArtist()
    {
        if (musicObject != null)
        {
            if (musicObject.id == Guid.Empty) { return; }
            MauiProgram.mainLayout.NavigateArtist(musicObject.id);
        }
    }
    private void NavigateToPlaylist()
    {
        if (musicObject != null)
        {
            if (musicObject.id == Guid.Empty) { return; }
            MauiProgram.mainLayout.NavigatePlaylist(musicObject.id);
        }
    }
    private async void FavouriteItem()
    {
        if (musicObject != null)
        {
            musicObject.isFavourite = !musicObject.isFavourite;
            await MauiProgram.servers[0].FavouriteItem(musicObject.id, musicObject.isFavourite);
        }
        StateHasChanged();
    }
    private async void OpenContextMenu()
    {
        MauiProgram.ContextMenuTaskList.Clear();
        MauiProgram.ShowContextMenuImage = true;

        if(musicObject is Album)
        {
            Album album = (Album)musicObject;
            MauiProgram.ContextMenuMainText = album.name;
            MauiProgram.ContextMenuSubText = album.artistCongregate;
            MauiProgram.ContextMenuImage = album.imageAtResolution(resolution);
            MauiProgram.ContextMenuTaskList = album.GetContextMenuItems();
        }
        else if(musicObject is Artist)
        {
            Artist artist = (Artist)musicObject;
            MauiProgram.ContextMenuTaskList = artist.GetContextMenuItems();
            MauiProgram.ContextMenuMainText = artist.name;
            MauiProgram.ContextMenuSubText = String.Empty;
            MauiProgram.ContextMenuImage = artist.imageAtResolution(resolution);
        }
        else if(musicObject is Playlist)
        {
            Playlist playlist = (Playlist)musicObject;
            MauiProgram.ContextMenuTaskList = playlist.GetContextMenuItems();
            MauiProgram.ContextMenuImage = playlist.image.SourceAtResolution(resolution);
            MauiProgram.ContextMenuSubText = String.Empty;
            MauiProgram.ContextMenuMainText = playlist.name;
        }
        else if (musicObject is Song)
        {
            Song song = (Song)musicObject;
            //MauiProgram.ContextMenuTaskList = song.GetContextMenuItems();
            MauiProgram.ContextMenuImage = song.image.SourceAtResolution(resolution);
            MauiProgram.ContextMenuSubText = song.artistCongregate;
            MauiProgram.ContextMenuMainText = song.name;
        }
        else if (musicObject != null)
        {
            MauiProgram.ContextMenuMainText = musicObject.name;
            MauiProgram.ContextMenuImage = musicObject.image.SourceAtResolution(resolution);
        }

        await MauiProgram.mainPage.ShowContextMenu();
        await Task.Run(() =>
        {
            // Literally just waiting for the fucking thing to close before we refresh 
            while (MauiProgram.ContextMenuIsOpen == true)
            {

            }
        });
        StateHasChanged();
    }
}
