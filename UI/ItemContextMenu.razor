@using Microsoft.Maui.Controls;
@using Microsoft.JSInterop
@using PortaJel_Blazor.Classes;
@inject IJSRuntime JS

@* Please follow instuction below to lock scrolling when required:
https://css-tricks.com/prevent-page-scrolling-when-a-modal-is-open/ *@
@* https://github.com/dotnet/aspnetcore/issues/16646 
    This dude has the same issues with the list not updating
*@

<div class="context-menu" id="context-menu">
    @if (showImage)
    {
        <div class="imageContainer">
            <img class="imageToDisplay" src="@image" />
            <div class="imageSubtext">
                <div class="mainText">@mainText</div>
                <div class="subText">@subText</div>
            </div>
        </div>
    }

    <div class="ItemList">
        @foreach (var item in Tasks)
        {
            <div class="Item" @onclick="@(e => RunTask(item))">@item.itemName</div>
        }
        <div class="Item" @onclick=HideMenu>Close</div>
    </div>
</div>

@code {
    [Parameter] public ItemContextMenu? reference { get; set; }

    private string menuPosition = "100vh";
    private string opacity = "0%";

    private bool isActive = false;
    private bool showImage = false;
    private string image = String.Empty;
    private string mainText = String.Empty;
    private string subText = String.Empty;

    private List<ContextMenuItem> Tasks = new List<ContextMenuItem>();

    protected override async Task OnInitializedAsync()
    {
        await JS.InvokeAsync<string>("SetObjectRef", DotNetObjectReference.Create(this));
    }

    public void SetShowImage(bool showImg)
    {
        showImage = showImg;
    }
    public async void RunTask(ContextMenuItem task)
    {
        HideMenu();
        try
        {
            await task.job;
        }
        catch (Exception)
        {
            Console.WriteLine("Failed to run task");
        }
    }
    public async void ShowMenu()
    {
        await MauiProgram.mainLayout.OpenContextMenu();
    }
    public async void HideMenu()
    {
        await MauiProgram.mainLayout.CloseContextMenu();
    }
    [JSInvokable("RefreshContextMenu")]
    public async Task RefreshContextMenu()
    {
        Tasks = MauiProgram.ContextMenuTaskList;
        showImage = MauiProgram.ShowContextMenuImage;
        image = MauiProgram.ContextMenuImage;
        mainText = MauiProgram.ContextMenuMainText;
        subText = MauiProgram.ContextMenuSubText;

        StateHasChanged();
    }
}
