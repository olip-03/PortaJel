@using PortaJel_Blazor.Data;
@using PortaJel_Blazor.Shared.Icons;
@inject IJSRuntime JS
@namespace PortaJel_Blazor.Shared

<div class="header" style="height: @headerHeight">
    <div class="header-imgcontainer PageSecondaryBackgroundColor" style="height: @headerHeight" id="header-backgroundPlaceholder">
        <img src="data:image/png;base64, @backgroundImgUrlPlaceholder" class="header-background" />
    </div>

    <div style="margin-top: auto; display: flex; height: @contentHeight">
        <div @onclick=GoBack>
            <BackIcon ExtraStyle="
                margin: auto 0 auto 1rem;
                padding: 0;
                width: 2rem;
                height: 2rem;
                z-index: 200;
                position: relative;" />
        </div>

        <div class="header-nameContainer" @onclick=GoToArtist>
            @if (baseMusicItem != null)
            {
                if (baseMusicItem is Album)
                {
                    Album item = (Album)baseMusicItem;
                    <h3 id ="header-text" class="header-text hidden PrimaryTextColor">@item.name</h3>
                }
                else
                {
                    <h3 id="header-text" class="header-text hidden PrimaryTextColor">@baseMusicItem.name</h3>
                }
            }
        </div>
    </div>

</div>

@code {
    [Parameter] public string backgroundImgUrlPlaceholder { get; set; } = string.Empty;
    [Parameter] public string backgroundImgUrl { get; set; } = string.Empty;
    [Parameter] public BaseMusicItem? baseMusicItem { get; set; } = null;

    private string headerHeight = (MauiProgram.SystemHeaderHeight * 2) + "px!important";
    private string contentHeight = (MauiProgram.SystemHeaderHeight) + "px!important";

    private async void GoBack()
    {
        MauiProgram.WebView.isLoading = true;
        MauiProgram.MainPage.ShowLoadingScreen(true);
        try
        {
            await JS.InvokeAsync<string>("goBack");
        }
        catch (Exception ex)
        {
            bool answer = await App.Current.MainPage.DisplayAlert("Error?", $"Failed to navigate back will return home. Error: {ex} ", "Return", "Continue");
            MauiProgram.WebView.NavigateHome();
        }
    }

    private void GoToArtist()
    {
        if (baseMusicItem is Album)
        {
            Album item = (Album)baseMusicItem;
            if (item != null && item.Artists.First() != null)
            {
                MauiProgram.WebView.NavigateArtist(item.Artists.First().id);
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeAsync<string>("InitalizeArtistView");
    }
}
