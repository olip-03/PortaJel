@using PortaJel_Blazor.Data;
@using Jellyfin.Sdk
@using System.Net;

<style>
    .album-cover {
        width: 80px;
        height: 80px;
        border-radius: 2px;
        margin-right: 10px;
    }
</style>

<img src="@defaultSrc" loading="lazy" class="album-cover" />

@code {
    [Parameter] public Album album { get; set; } = new Album();
    private string defaultSrc = "images/emptyAlbum.png";

    protected override async Task OnInitializedAsync()
    {
        using (HttpClient client = new HttpClient())
        {
            defaultSrc = album.imageSrc;
            HttpResponseMessage response = await client.GetAsync(album.imageSrc, HttpCompletionOption.ResponseHeadersRead);

            if (response.IsSuccessStatusCode)
            {
                defaultSrc = album.imageSrc;
                StateHasChanged();
                return;
            }
            else
            {
                bool validImg = false;
                // get the artist id
                if (album.artists == null) 
                {
                    album.imageSrc = "images/emptyAlbum.png";
                    StateHasChanged();
                    return; 
                }
                if (album.artists.Length <= 0)
                {
                    album.imageSrc = "images/emptyAlbum.png";
                    StateHasChanged();
                    return;
                }

                BaseItemDtoQueryResult itemResult = await MauiProgram.servers[0].GetArtistClient().GetArtistsAsync(searchTerm: album.artists[0].name);
                string idSearch = itemResult.Items.FirstOrDefault().Id.ToString();

                album.imageSrc = "https://media.olisshittyserver.xyz/Items/" + idSearch + "/Images/Primary";
                HttpResponseMessage artistImgCheck = await client.GetAsync(album.imageSrc, HttpCompletionOption.ResponseHeadersRead);
                if (artistImgCheck.IsSuccessStatusCode)
                {
                    defaultSrc = album.imageSrc;
                    StateHasChanged();
                    return;
                }

                HttpResponseMessage finalCheck = await client.GetAsync(album.imageSrc, HttpCompletionOption.ResponseHeadersRead);
                if (!finalCheck.IsSuccessStatusCode)
                {
                    album.imageSrc = "images/emptyAlbum.png";
                }
            }
        }

        StateHasChanged();
    }
}
