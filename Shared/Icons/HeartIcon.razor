@using BlazorAnimate;

@if (AnimateChange)
{
    <Animate Animation="Animations.ZoomIn" Duration="TimeSpan.FromSeconds(0.5)">
        @if (Filled)
        {
            <svg class="PrimaryColor" height="@Height" width="@Width" viewBox="0 -960 960 960" xmlns="http://www.w3.org/2000/svg">
                <path d="M 480 -120 L 422 -172 C 354.667 -232.667 299 -285 255 -329 C 211 -373 176 -412.5 150 -447.5 C 124 -482.5 105.833 -514.667 95.5 -544 C 85.167 -573.333 80 -603.333 80 -634 C 80 -696.667 101 -749 143 -791 C 185 -833 237.333 -854 300 -854 C 334.667 -854 367.667 -846.667 399 -832 C 430.333 -817.333 457.333 -796.667 480 -770 C 502.667 -796.667 529.667 -817.333 561 -832 C 592.333 -846.667 625.333 -854 660 -854 C 722.667 -854 775 -833 817 -791 C 859 -749 880 -696.667 880 -634 C 880 -603.333 874.833 -573.333 864.5 -544 C 854.167 -514.667 836 -482.5 810 -447.5 C 784 -412.5 749 -373 705 -329 C 661 -285 605.333 -232.667 538 -172 L 480 -120 Z M 480 -501 Z" fill="currentColor" transform="matrix(1, 0, 0, 1, 7.105427357601002e-15, 1.1368683772161603e-13)" />
            </svg>
        }
        else
        {
            <svg xmlns="http://www.w3.org/2000/svg" height="@Height" width="@Width" viewBox="0 -960 960 960">
                <path fill="@textColor" d="m480-120-58-52q-101-91-167-157T150-447.5Q111-500 95.5-544T80-634q0-94 63-157t157-63q52 0 99 22t81 62q34-40 81-62t99-22q94 0 157 63t63 157q0 46-15.5 90T810-447.5Q771-395 705-329T538-172l-58 52Zm0-108q96-86 158-147.5t98-107q36-45.5 50-81t14-70.5q0-60-40-100t-100-40q-47 0-87 26.5T518-680h-76q-15-41-55-67.5T300-774q-60 0-100 40t-40 100q0 35 14 70.5t50 81q36 45.5 98 107T480-228Zm0-273Z" />
            </svg>
        }
    </Animate>
}
else
{
    if (Filled)
    {
        <svg class="PrimaryColor" height="@Height" width="@Width" viewBox="0 -960 960 960" xmlns="http://www.w3.org/2000/svg">
            <path d="M 480 -120 L 422 -172 C 354.667 -232.667 299 -285 255 -329 C 211 -373 176 -412.5 150 -447.5 C 124 -482.5 105.833 -514.667 95.5 -544 C 85.167 -573.333 80 -603.333 80 -634 C 80 -696.667 101 -749 143 -791 C 185 -833 237.333 -854 300 -854 C 334.667 -854 367.667 -846.667 399 -832 C 430.333 -817.333 457.333 -796.667 480 -770 C 502.667 -796.667 529.667 -817.333 561 -832 C 592.333 -846.667 625.333 -854 660 -854 C 722.667 -854 775 -833 817 -791 C 859 -749 880 -696.667 880 -634 C 880 -603.333 874.833 -573.333 864.5 -544 C 854.167 -514.667 836 -482.5 810 -447.5 C 784 -412.5 749 -373 705 -329 C 661 -285 605.333 -232.667 538 -172 L 480 -120 Z M 480 -501 Z" fill="currentColor" transform="matrix(1, 0, 0, 1, 7.105427357601002e-15, 1.1368683772161603e-13)" />
        </svg>
    }
    else
    {
        <svg xmlns="http://www.w3.org/2000/svg" height="@Height" width="@Width" viewBox="0 -960 960 960">
            <path fill="@textColor" d="m480-120-58-52q-101-91-167-157T150-447.5Q111-500 95.5-544T80-634q0-94 63-157t157-63q52 0 99 22t81 62q34-40 81-62t99-22q94 0 157 63t63 157q0 46-15.5 90T810-447.5Q771-395 705-329T538-172l-58 52Zm0-108q96-86 158-147.5t98-107q36-45.5 50-81t14-70.5q0-60-40-100t-100-40q-47 0-87 26.5T518-680h-76q-15-41-55-67.5T300-774q-60 0-100 40t-40 100q0 35 14 70.5t50 81q36 45.5 98 107T480-228Zm0-273Z" />
        </svg>
    }
}


@code {
    [Parameter] public bool Filled { get; set; } = false;
    [Parameter] public bool AnimateChange { get; set; } = false;
    [Parameter] public int Width { get; set; } = 24;
    [Parameter] public int Height { get; set; } = 24;

    private string primaryColor = "red";
    private string textColor = "white";

    protected override void OnInitialized()
    {
        UpdateColors();
    }

    public void UpdateColors()
    {
        // PageSecondaryBackgroundColor
        if (App.Current != null)
        {
            var hasPrimaryColor = App.Current.Resources.TryGetValue("PrimaryColor", out object outPrimaryColor);
            if (hasPrimaryColor)
            {
                Color color = (Color)outPrimaryColor;
                primaryColor = color.ToHex();
            }
            var hasTextColor = App.Current.Resources.TryGetValue("PrimaryTextColor", out object outTextColor);
            if (hasTextColor)
            {
                Color color = (Color)outTextColor;
                textColor = color.ToHex();
            }
            StateHasChanged();
        }
    }
}
