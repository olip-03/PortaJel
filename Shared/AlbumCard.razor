@using PortaJel_Blazor.Data;
@using PortaJel_Blazor;
@using Microsoft.Maui.Controls;
@using PortaJel_Blazor.Pages;
@using PortaJel_Blazor.Classes;
@inject NavigationManager NavigationManager
@namespace PortaJel_Blazor.Shared

<div class="containerImg" @onclick="NavigateToAlbum" @oncontextmenu="OpenContextMenu">
    <div class="imageHolder PageSecondaryBackgroundColor @(isArtist == true ? "artistCircle" : "")">
        <img src="data:image/png;base64, @placeholderBase64" class="albumImage lowRes @(isArtist == true ? "artistCircle" : "")" />
        <img src="@albumImg" class="albumImage album-cover-img opacityTransition @(isArtist == true ? "artistCircle" : "")" loading="lazy" onerror="this.src='/images/emptyAlbum.png'" />
    </div>

    @if(musicObject != null)
    {
        <p class="albumText @(isArtist == true ? "artistText" : "")">
            @if (musicObject is Song)
            { // Show the little song icon
                <img src="/images/song.svg" style="height: 1rem; width: 1rem;"/>
            }
            else if(musicObject is Album)
            {
                <img src="/images/album.svg" style="height: 1rem; width: 1rem;"/>
            }
            @titleCongregate
        </p>
    }
</div>

<style>
    .containerImg {
        display: flex;
        flex-direction: column;
        height: auto; /* Change height to 'auto' */
        inline-size: 160px;
        margin-left: 1rem;
    }
</style>

@code {
    [Parameter] public BaseMusicItem musicObject { get; set; } = new Album();
    [Parameter] public string placeholderBase64 { get; set; } = String.Empty;
    [Parameter] public int? albumResolutionpx { get; set; } = 160;
    bool isArtist = false;
    string? albumText = null;
    string? artistName = null;
    string? titleCongregate = null;

    private int resolution = 250;

    private string albumImg { get; set; } = String.Empty;
    private string backImg { get; set; } = String.Empty;

    protected override void OnInitialized()
    {
        if(musicObject != null)
        {
            albumImg = musicObject.image.SourceAtResolution(resolution);
            backImg = musicObject.image.SourceAtResolution(25);
            if (musicObject is Album)
            {
                Album album = (Album)musicObject;
                artistName = album.ArtistNames;
                titleCongregate = musicObject.name + " • " + artistName;
            }
            if (musicObject is Song)
            {
                Song song = (Song)musicObject;
                artistName = song.artistCongregate;
                titleCongregate = musicObject.name + " • " + artistName;
            }
            if(musicObject is Artist)
            {
                isArtist = true;
                titleCongregate = musicObject.name;
            }
            StateHasChanged();
        }
    }

    private void NavigateToAlbum()
    {
        if (musicObject != null)
        {
            if (musicObject is Album)
            {
                Album album = (Album)musicObject;
                MauiProgram.MainPage.ShowLoadingScreen(true);
                MauiProgram.WebView.NavigateAlbum(album.Id);
            }
            if (musicObject is Song)
            {
                Song song = (Song)musicObject;
                Album? album = song.AlbumData;
                if(album != null)
                {
                    MauiProgram.MainPage.ShowLoadingScreen(true);
                    MauiProgram.WebView.NavigateAlbum(album.Id);
                }
            }
            if(musicObject is Artist)
            {
                if (musicObject.id == Guid.Empty) { return; }
                MauiProgram.MainPage.ShowLoadingScreen(true);
                MauiProgram.WebView.NavigateArtist(musicObject.id);
            }
        }
    }

    private async void OpenContextMenu()
    {
        MauiProgram.MainPage.OpenContextMenu(musicObject, 250, placeholderBase64);
        await Task.Run(() =>
        {
            // Literally just waiting for the fucking thing to close before we refresh
            while (MauiProgram.MainPage.isContextMenuOpen == true)
            {

            }
        });
        StateHasChanged();
    }

}