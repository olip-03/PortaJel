@using PortaJel_Blazor.Data;
@namespace PortaJel_Blazor.Shared

<li class="music-item PageSecondaryColor" @onclick=NavigateToAlbum @oncontextmenu=OpenContextMenu>
    <div class="image-container" style="display: grid;">
        <img class="album-image album-cover-img opacityTransition"
             src="@musicItem.image.SourceAtResolution(100)"
             loading="lazy"
             onerror="this.src='/images/emptyAlbum.png'" />
        <img class="album-image-placeholder"
             src="data:image/png;base64, @placeholderBase64" 
             onerror="this.style.opacity=0" />
    </div>
    <div class="music-details PrimaryTextColor">
        @if(musicItem is Album)
        {
            Album album = (Album)musicItem;
            string artistName = " • " + album.ArtistNames;
            <b class="PrimaryTextColor">@album.Name</b> @artistName
        }   
    </div>
</li>

@code {
    [Parameter] public BaseMusicItem musicItem { get; set; } = new Album();
    [Parameter] public string placeholderBase64 { get; set; } = String.Empty;

    private void NavigateToAlbum()
    {
        if (musicItem != null)
        {
            MauiProgram.MainPage.ShowLoadingScreen(true);
            MauiProgram.WebView.NavigateAlbum(musicItem.id);
        }
    }
    private void NavigateToArtist()
    {
        if (musicItem != null)
        {
            MauiProgram.MainPage.ShowLoadingScreen(true);
            MauiProgram.WebView.NavigateArtist(musicItem.id);
        }
    }
    private async void OpenContextMenu()
    {
        MauiProgram.MainPage.OpenContextMenu(musicItem, 250, placeholderBase64);
        await Task.Run(() =>
        {
            // Literally just waiting for the fucking thing to close before we refresh
            while (MauiProgram.MainPage.isContextMenuOpen == true)
            {

            }
        });
        StateHasChanged();
    }
}
