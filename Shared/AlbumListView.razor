@using PortaJel_Blazor.Classes.Data
@namespace PortaJel_Blazor.Shared

<li class="music-item PageSecondaryColor" @onclick="NavigateToAlbum" @oncontextmenu="OpenContextMenu">
    <div class="image-container" style="display: grid;">
        @{ 
            string imageSrc = imgSrc;
            string placeholder = "data:image/png;base64, " + PlaceholderBase64;
        }
        <img class="album-image album-cover-img opacityTransition" src="@imageSrc" style="opacity: 0" onerror="this.src='/images/emptyAlbum.png'"/>
        <img class="album-image-placeholder" src=" @placeholder" onerror="this.style.opacity=0"/>
    </div>
    <div class="music-details PrimaryTextColor">
        @if(MusicItem is Album album)
        {
            string artistName = " • " + album.ArtistNames;
            <b class="PrimaryTextColor">@album.Name</b> @artistName
        }   
    </div>
</li>

@code {
    [Parameter] public BaseMusicItem MusicItem { get; set; } = new Album();
    [Parameter] public string PlaceholderBase64 { get; set; } = string.Empty;
    private string imgSrc = string.Empty;
    private Guid musicItemId;

    protected override void OnParametersSet()
    {
        switch (MusicItem)
        {
            case Album album:
                imgSrc = album.ImgSource;
                musicItemId = album.Id;
                break;
            case Song song:
                imgSrc = song.ImgSource;
                musicItemId = song.Id;
                break;
            case Artist artist:
                imgSrc = artist.ImgSource;
                musicItemId = artist.Id;
                break;
            case Playlist playlist:
                imgSrc = playlist.ImgSource;
                musicItemId = playlist.Id;
                break;
        }
    }

    private void NavigateToAlbum()
    {
        if (MusicItem is not Album album) return;
        MauiProgram.MainPage.ShowLoadingScreen(true);
        MauiProgram.WebView.NavigateAlbum(album);
    }

    private void NavigateToArtist()
    {
        if (MusicItem is not Artist artist) return;
        MauiProgram.MainPage.ShowLoadingScreen(true);
        MauiProgram.WebView.NavigateArtist(artist.Id);
        
    }

    private async void OpenContextMenu()
    {
        MauiProgram.MainPage.OpenContextMenu(MusicItem, 250, PlaceholderBase64);
        await Task.Run(() =>
        {
            // Literally just waiting for the fucking thing to close before we refresh
            while (MauiProgram.MainPage.isContextMenuOpen == true)
            {

            }
        });
        StateHasChanged();
    }
}