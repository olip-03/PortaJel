@using Jellyfin.Sdk;
@using PortaJel_Blazor.Shared;
@using PortaJel_Blazor.Data;
@using BlazorAnimate
@namespace PortaJel_Blazor.Shared

<div>
    <h3 class="PrimaryTextColor TitleText">@Title</h3>

    @*<div class="horizScroll-menuTitleContainer">
        <h3 class="PrimaryTextColor">@Title</h3>
        <div class="PrimaryTextColor" style="display: flex;">
                View All
                <img src="/images/showgrid.svg" class="horizScroll-showall-img">
            </div>
    </div>*@

    <div class="horizScroll-scrollmenu">
        @if (albumData != null && albumData.Length > 0)
        {
            @for (int i = 0; i < albumData.Count(); i++)
            {
                <AlbumCard musicObject="@albumData[i]" placeholderBase64="@albumBlurHashData[i]" />
            }
            <div class="horizScroll-scrollmenu-showall">
                <p style="margin: 1rem; color: darkgray;">Show All</p>
            </div>
        }
        else if (showLoading)
        {
            <div class="horizScroll-loadingIcon">
                <Spinner Style="width: 3rem; height: 3rem; margin: auto;"></Spinner>
            </div>
        }
    </div>
</div>

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter] public string Title { get; set; } = String.Empty;
    [Parameter] public BaseMusicItem[] albumData { get; set; } = new BaseMusicItem[0];
    [Parameter] public string[] albumBlurHashData { get; set; } = new string[0];
    [Parameter] public int itemCount { get; set; } = 0;
    [Parameter] public bool showLoading { get; set; } = false;
}
